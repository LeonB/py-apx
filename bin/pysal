#!/usr/bin/env python

import sys
import email
import argparse
from pysal.pysal import AttachmentParser
from pysal.pysal import Logger

parser = argparse.ArgumentParser(
	description = 'Read e-mail from stdin and feed the attachments to sa-learn')
parser.add_argument('-v', '--verbose', action="count", dest='verbosity',
                  default=0, help='increase verbosity')
parser.add_argument('-q', '--quite', dest='quiet', action='store_true',
                  default=False, help='Be quiet (don\'t even report to stdout')
parser.add_argument('-l', '--log-level', dest='log_level', default='ERROR',
                   help='set (sys-)log level')
parser.add_argument('--version', action="store_true", dest='show_version',
                  default=0, help='print the version number')
parser.add_argument('sa_learn_args', nargs=argparse.REMAINDER, 
                  help='sa-learn arguments to pass on')
parser.add_argument('-g', '--guess', dest='guess', 
                    action="store_true", help='guess if to pass the --spam, --ham or --forget argument to sa-learn')

args = parser.parse_args()

Logger.instance = Logger(log_level=args.log_level, verbosity=args.verbosity,
                           quiet=args.quiet)

stdin_data = ''
if not sys.stdin.isatty(): # redirected from file or pipe
    stdin_data = "".join(sys.stdin.readlines())

if not stdin_data:
    Logger.getInstance().error('no input data')
    sys.exit(2)

mail = email.message_from_string(stdin_data)

attachments = AttachmentParser().get_attachments(mail)
Logger.getInstance().debug('%i parts' % len(attachments))

for attachment in attachments:
    Logger.getInstance().debug('Processing mail with subject: %s' %
                  attachment.get('Subject'))
